:import {
    -st-from: "../../common/formatters.st";
    -st-named: color, fallback;
}

:vars {
    /*Defaults*/
    DefaultDialogBgColor: #ffffff;
}

:vars {
    /*Overrides*/
    DialogBgColor: --overridable;
}

:vars {
    width: 580px;
    maxDesktopHeight: 620px;
    minDesktopHeight: 350px;
    maxMobileHeight: 468px;
    minMobileHeight: 324px;
    paddingDesktop: 80px;
    paddingMobile: 32px;
    dialogBgColor: fallback(color(value(DialogBgColor)), value(DefaultDialogBgColor));
}


.root {
    -st-states: mobile, withBackground, inFullScreen;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1000;
}

.root:withBackground {
    background-color: rgba(0, 0, 0, 0.6);
}

.root .contentWrapper {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: value(paddingDesktop) 0;
    box-sizing: border-box;
    width: value(width);
    background-color: value(dialogBgColor);
}

.root:mobile .contentWrapper {
    top: 36px;
    left: 20px;
    right: 20px;
    transform: initial;
    width: initial;
}

.root:inFullScreen .contentWrapper {
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    transform: initial;
    width: initial;
}


.closeButtonWrapper {
    position: absolute;
    display: flex;
    justify-content: flex-end;
    width: 100%;
    top: 0;
    left: 0;
}

.root:mobile .closeButton {
    padding: 20px;
}

.root:mobile .closeButton svg {
    width: 12px;
    height: 12px;
}

.closeButton {
    padding: 24px;
}

.root:inFullScreen .content {
    height: 100%;
}

.root:not(:inFullScreen) .content {
    max-height: calc(value(maxDesktopHeight) - 2 * value(paddingDesktop));
    min-height: calc(value(minDesktopHeight) - 2 * value(paddingDesktop));
}

.root:mobile:not(:inFullScreen) .content {
    max-height: calc(value(maxMobileHeight) - 2 * value(paddingMobile));
    min-height: calc(value(minMobileHeight) - 2 * value(paddingMobile));
}

.content {
    overflow: auto;
}

.root .content {
    padding: 0 value(paddingDesktop);
}

.root:mobile .content {
    padding: 0 value(paddingMobile);
}
